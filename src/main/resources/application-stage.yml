# IITP API 스테이징 환경 설정 파일
# 스테이징 환경에서 사용되는 특정 설정을 포함합니다.
# 이 설정은 application.yml의 기본 설정을 오버라이드합니다.

server:
  port: 28080  # 스테이징 서버 포트
  servlet:
    context-path: /
    encoding:
      force-response: true
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 10000
    accept-count: 100

spring:
  # 애플리케이션 이름 설정
  application:
    name: iitp-api
  profiles:
    active: stage
  
  # 데이터베이스 연결 설정
  datasource:
    url: jdbc:postgresql://stage-db:5432/iitp
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    # HikariCP 커넥션 풀 설정
    hikari:
      pool-name: IITPStageHikariPool
      maximum-pool-size: 30
      minimum-idle: 15
      idle-timeout: 600000
      connection-timeout: 60000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
  
  # JPA 설정
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        default_batch_fetch_size: 1000
        jdbc:
          batch_size: 1000
        order_inserts: true
        order_updates: true
  
  # Redis 캐시 설정
  cache:
    type: redis
    redis:
      host: stage-redis
      port: 6379
  
  # 메일 서버 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Actuator 모니터링 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus  # 제한된 엔드포인트만 노출
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true
    timers:
      enabled: true  # 스테이징 환경에서는 타이밍 활성화

# API 문서화 설정
springdoc:
  version: @springdoc.version@
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
  packages-to-scan: com.sweetk.iitp.controller
  paths-to-match: /api/**

# 애플리케이션 커스텀 설정
app:
  # JWT 설정
  jwt:
    secret: ENC(encrypted_jwt_secret_here)  # Jasypt로 암호화된 JWT 시크릿
    expiration: 86400000  # 토큰 만료 시간 (24시간)
  
  # 버전 정보
  version: ${app.version:1.0.0}
  build-date: ${app.build.date:2024-03-19}
  
  # 모니터링 설정
  monitoring:
    enabled: true
    prometheus:
      enabled: true
  
  # 캐시 설정
  cache:
    ttl: 1800  # 캐시 유효 시간 (30분)
  
  # Rate Limiting 설정
  rate-limit:
    enabled: true
    capacity: 500
    time-window: 60
  
  # 외부 API 설정
  external-api:
    timeout: 3000  # 타임아웃 (3초)
    retry:
      max-attempts: 2  # 최대 재시도 횟수
      delay: 500      # 재시도 간격 (0.5초)

# Jasypt 암호화 설정
jasypt:
  encryptor:
    password: ${jasypt.encryptor.password}  # 암호화 키
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator

# Log4j2 설정 파일 로딩
logging:
  config: classpath:log4j2-stage.yml

  api:
    version:
      current: v1
      supported:
        - v1
        - v2
    security:
      api-key:
        header: X-API-Key
        required: true
    rate-limit:
      enabled: true
      capacity: 100
      time-window: 60

  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false